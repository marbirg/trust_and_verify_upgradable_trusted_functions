# Copyright (C) 2023 Gramine contributors
# SPDX-License-Identifier: BSD-3-Clause

# Python3 manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"
loader.env.MONO_LOG_LEVEL="debug"
loader.env.DOTNET_SYSTEM_GLOBALIZATION_INVARIANT="1"
# loader.env.COMPlus_DefaultStackSize="100000"
# loader.insecure__use_host_env = true
# loader.insecure_use_host_env = true

# Python's NumPy spawns as many threads as there are CPU cores, and each thread
# consumes a chunk of memory, so on large machines 1G enclave size may be not enough.
# We limit the number of spawned threads via OMP_NUM_THREADS env variable.
loader.env.OMP_NUM_THREADS = "4"

loader.insecure__use_cmdline_argv = true
 # loader.insecure_disable_aslr = true
 # sys.disallow_subprocess = true
 # sgx.file_check_policy = "allow_all_but_log"
 # sgx.use_exinfo = true

 # sys.enable_sigterm_injection = true

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr/{{ arch_libdir }}", uri = "file:/usr/{{ arch_libdir }}" },
  { path = "/usr/lib/dafny", uri = "file:./dafny" },

  { type = "tmpfs", path = "/tmp" },
  { type = "encrypted", path = "/data/", uri = "file:./data", key_name = "_sgx_mrsigner" },
  # { type = "encrypted", path = "/data/", uri = "file:./data", key_name = "_sgx_mrenclave" },
  # { type = "encrypted", path = "/data/", uri = "file:./data"},
]

sys.stack.size = "100M"

sys.enable_extra_runtime_domain_names_conf = true

sgx.debug = false
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}
sgx.enclave_size = "1G"
sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '32' }}

sgx.remote_attestation = "{{ ra_type }}"
sgx.ra_client_spid = "{{ ra_client_spid }}"
sgx.ra_client_linkable = {{ 'true' if ra_client_linkable == '1' else 'false' }}

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:./dafny/",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:scripts/",
]
